<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.MonsterMapper">
<!--    如果使用原来的方式#{} 在test表达式是无法取出入参值，需要通过注解@Param
 public List<Monster> findMonsterByAge(@Param(value = "age") Integer age);
 -->
    <select id="findMonsterByAge" parameterType="java.lang.Integer" resultType="Monster">
        SELECT * FROM `monster` WHERE 1 = 1
        <if test="age >= 0">
            AND age > #{age}
        </if>
    </select>

<!--    where + if-->
<!--    如果入参是对象，在test表达式中，可以直接使用对象属性名-->
    <select id="findMonsterByIdAndName" parameterType="Monster" resultType="Monster">
        SELECT * FROM `monster`
        <where>
            <if test="id >= 0">
                AND id > #{id}
            </if>
            <if test="name != null and name != ''">
                AND `name` = #{name};
            </if>
        </where>
    </select>


    <select id="findMonsterByIdOrName_choose" parameterType="map" resultType="Monster">
        SELECT * FROM `monster`
        <choose>
            <when test="name != null and name != ''">
                WHERE `name` = #{name}
            </when>
            <when test="id > 0">
                WHERE `id` > #{id}
            </when>
            <otherwise>
                WHERE `salary` > 100;
            </otherwise>
        </choose>
    </select>
    <select id="findMonsterById_forEach" parameterType="map" resultType="Monster">
        SELECT * FROM `monster`
        <if test="ids != null and ids != ''">
            <where>
                id IN 
                <foreach collection="ids" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </where>
        </if>
    </select>



<!--    使用where标签会加入where 同时会去除多余的AND条件-->

<!--    <trim prefix="WHERE" prefixOverrides="and|or|ls">-->
<!--            如果子句的开头为and|or|ls就去除-->
    <select id="findMonsterById_Trim" parameterType="map" resultType="Monster">
        SELECT * FROM `monster`
       <trim prefix="WHERE" prefixOverrides="and|or|ls">
            <if test="name != null and name != ''">
                 ls `name` = #{name}
            </if>
            <if test="age != null and age != ''">
                AND `age` = #{age}
            </if>
       </trim>
    </select>

</mapper>